name: Build
on:
    push:
        branches: stable
jobs:
    Stable-Build:
        continue-on-error: true
        strategy:
            matrix:
                os: [macos-latest, ubuntu-latest, windows-latest]
                include:
                    - os: macos-latest
                      flags: --universal --x64=false --arm64=false -m
                    - os: ubuntu-latest
                      flags: --armv7l -l
                    - os: windows-latest
                      flags: --ia32 -w

        runs-on: ${{matrix.os}}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Prepare PNPM
              uses: pnpm/action-setup@v4

            - name: Prepare Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 22
                  cache: pnpm

            - name: Install dependencies
              run: pnpm i

            - name: Build TypeScript
              run: pnpm build

            - name: Load Electron Cache
              uses: actions/cache/restore@v4
              with:
                  path: .cache
                  key: electron-zips.stable.${{matrix.os}}

            - name: Build ArmCord
              run: pnpm electron-builder --x64 --arm64 ${{matrix.flags}} --publish always
              env:
                  GH_TOKEN: ${{github.token}}

            - name: Fetch ArmCord APT Repo
              if: ${{matrix.os}} == "ubuntu-latest"
              uses: actions/checkout@v4
              with:
                  repository: armcord/apt-repo
                  path: apt-repo
                  sparse-checkout: true
                  token: ${{secrets.ARMCORD_APT_REPO_CONTENTS_RW}}

            - name: Deploy to ArmCord APT repository
              if: ${{matrix.os}} == "ubuntu-latest"
              run: |
                  mkdir apt-repo/debian
                  cp dist/*.deb apt-repo/debian
                  cd apt-repo
                  echo debian >> .git/info/sparse-checkout
                  git config user.name "APT Deployer"
                  git config user.email "action@github.com"
                  git add *.deb || true
                  git commit -m "New Release (${{github.sha}})"
                  git push -f || true

            - name: Save Electron Cache
              uses: actions/cache/save@v4
              with:
                  path: .cache
                  key: electron-zips.stable.${{matrix.os}}
